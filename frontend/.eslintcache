[{"D:\\Project\\E-Commerce\\frontend\\src\\index.js":"1","D:\\Project\\E-Commerce\\frontend\\src\\App.js":"2","D:\\Project\\E-Commerce\\frontend\\src\\store.js":"3","D:\\Project\\E-Commerce\\frontend\\src\\Mui-theme.js":"4","D:\\Project\\E-Commerce\\frontend\\src\\NotFound.js":"5","D:\\Project\\E-Commerce\\frontend\\src\\pages\\Login.js":"6","D:\\Project\\E-Commerce\\frontend\\src\\pages\\register.js":"7","D:\\Project\\E-Commerce\\frontend\\src\\redux\\reducer\\user-reduer.js":"8","D:\\Project\\E-Commerce\\frontend\\src\\components\\reusable\\useForm.js":"9","D:\\Project\\E-Commerce\\frontend\\src\\redux\\actions\\user-action.js":"10","D:\\Project\\E-Commerce\\frontend\\src\\pages\\Register.js":"11","D:\\Project\\E-Commerce\\frontend\\src\\components\\reusable\\SnackBar.js":"12","D:\\Project\\E-Commerce\\frontend\\src\\components\\reusable\\Loader.js":"13","D:\\Project\\E-Commerce\\frontend\\src\\pages\\Home.js":"14","D:\\Project\\E-Commerce\\frontend\\src\\components\\shared\\Nav.js":"15","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Register.js":"16","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Login.js":"17","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Home.js":"18","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\useForm.js":"19","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\Loader.js":"20","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\SnackBar.js":"21","D:\\Project\\E-Commerce\\frontend\\src\\Redux\\actions\\user-action.js":"22","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\Nav.js":"23","D:\\Project\\E-Commerce\\frontend\\src\\Redux\\reducer\\user-reduer.js":"24","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Controls.js":"25","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Grid.js":"26","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\Layout.js":"27","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\RadioGroup.js":"28","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Select.js":"29","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Input.js":"30","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\ActionButton.js":"31","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Checkbox.js":"32","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Button.js":"33","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Tooltips.js":"34","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\PublicNav.js":"35","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Menu.js":"36","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\UserRoute.js":"37","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\AdminRoute.js":"38","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\SEO.js":"39","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\user\\Profile.js":"40","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\admin\\AdminDashBoard.js":"41","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\UserNav.js":"42","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\AdminNav.js":"43","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Drawer.js":"44","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Products\\CategoryWise.js":"45","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Products\\ManageProducts.js":"46","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Admin\\AdminDashBoard.js":"47","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\User\\Profile.js":"48","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Categories\\ManageCategories.js":"49","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Categories\\ManageSubCategories.js":"50","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\EditPopup.js":"51","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Categories\\UpdateCategory.js":"52"},{"size":269,"mtime":1607931181571,"results":"53","hashOfConfig":"54"},{"size":2386,"mtime":1609188563395,"results":"55","hashOfConfig":"54"},{"size":805,"mtime":1609241815311,"results":"56","hashOfConfig":"54"},{"size":2698,"mtime":1609011036148,"results":"57","hashOfConfig":"54"},{"size":219,"mtime":1608560761705,"results":"58","hashOfConfig":"54"},{"size":6004,"mtime":1608834921687,"results":"59","hashOfConfig":"54"},{"size":4164,"mtime":1608641664968,"results":"60","hashOfConfig":"54"},{"size":877,"mtime":1608726942939,"results":"61","hashOfConfig":"54"},{"size":1985,"mtime":1608467209761,"results":"62","hashOfConfig":"54"},{"size":7853,"mtime":1608726917943,"results":"63","hashOfConfig":"54"},{"size":7362,"mtime":1608835012770,"results":"64","hashOfConfig":"54"},{"size":1499,"mtime":1608647616819,"results":"65","hashOfConfig":"54"},{"size":1055,"mtime":1608647622477,"results":"66","hashOfConfig":"54"},{"size":570,"mtime":1608837361296,"results":"67","hashOfConfig":"54"},{"size":1493,"mtime":1608837285543,"results":"68","hashOfConfig":"54"},{"size":8226,"mtime":1608990213106,"results":"69","hashOfConfig":"54"},{"size":6763,"mtime":1608990213106,"results":"70","hashOfConfig":"54"},{"size":3070,"mtime":1609002625139,"results":"71","hashOfConfig":"54"},{"size":1985,"mtime":1608467209761,"results":"72","hashOfConfig":"54"},{"size":1055,"mtime":1608647622477,"results":"73","hashOfConfig":"54"},{"size":1502,"mtime":1609191275670,"results":"74","hashOfConfig":"54"},{"size":12088,"mtime":1609244259155,"results":"75","hashOfConfig":"54"},{"size":4078,"mtime":1608988354660,"results":"76","hashOfConfig":"54"},{"size":2332,"mtime":1609247237045,"results":"77","hashOfConfig":"54"},{"size":410,"mtime":1608839619273,"results":"78","hashOfConfig":"54"},{"size":167,"mtime":1608839619193,"results":"79","hashOfConfig":"54"},{"size":692,"mtime":1609001877926,"results":"80","hashOfConfig":"54"},{"size":802,"mtime":1608839619257,"results":"81","hashOfConfig":"54"},{"size":920,"mtime":1608839619255,"results":"82","hashOfConfig":"54"},{"size":1218,"mtime":1609194962067,"results":"83","hashOfConfig":"54"},{"size":875,"mtime":1608839619282,"results":"84","hashOfConfig":"54"},{"size":570,"mtime":1608839619276,"results":"85","hashOfConfig":"54"},{"size":780,"mtime":1608839619278,"results":"86","hashOfConfig":"54"},{"size":696,"mtime":1608905609073,"results":"87","hashOfConfig":"54"},{"size":2589,"mtime":1608988234499,"results":"88","hashOfConfig":"54"},{"size":2209,"mtime":1608983947590,"results":"89","hashOfConfig":"54"},{"size":855,"mtime":1608977235913,"results":"90","hashOfConfig":"54"},{"size":856,"mtime":1608977256129,"results":"91","hashOfConfig":"54"},{"size":304,"mtime":1608977518212,"results":"92","hashOfConfig":"54"},{"size":305,"mtime":1608987687958,"results":"93","hashOfConfig":"54"},{"size":476,"mtime":1609002201120,"results":"94","hashOfConfig":"54"},{"size":3368,"mtime":1608990775567,"results":"95","hashOfConfig":"54"},{"size":2680,"mtime":1608990794158,"results":"96","hashOfConfig":"54"},{"size":5403,"mtime":1609001822642,"results":"97","hashOfConfig":"54"},{"size":3510,"mtime":1609263694156,"results":"98","hashOfConfig":"54"},{"size":4275,"mtime":1609005474633,"results":"99","hashOfConfig":"54"},{"size":476,"mtime":1609002201120,"results":"100","hashOfConfig":"54"},{"size":305,"mtime":1608987687958,"results":"101","hashOfConfig":"54"},{"size":7595,"mtime":1609244390364,"results":"102","hashOfConfig":"54"},{"size":3998,"mtime":1609005511704,"results":"103","hashOfConfig":"54"},{"size":3303,"mtime":1609187867107,"results":"104","hashOfConfig":"54"},{"size":4748,"mtime":1609247154587,"results":"105","hashOfConfig":"54"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},"finwsj",{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"119","messages":"120","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"121","messages":"122","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"126","messages":"127","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"123"},{"filePath":"131","messages":"132","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"123"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"139","usedDeprecatedRules":"123"},{"filePath":"140","messages":"141","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"142","usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"145","usedDeprecatedRules":"108"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"158","usedDeprecatedRules":"108"},{"filePath":"159","messages":"160","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"163","messages":"164","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"165","messages":"166","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"169","messages":"170","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"171","messages":"172","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"185","messages":"186","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"187","messages":"188","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"193","messages":"194","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"195","messages":"196","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"197","usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"202","messages":"203","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"204","messages":"205","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"206","usedDeprecatedRules":"108"},{"filePath":"207","messages":"208","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"209","messages":"210","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"108"},{"filePath":"214","messages":"215","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"216","usedDeprecatedRules":"108"},{"filePath":"217","messages":"218","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"219","messages":"220","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"221","usedDeprecatedRules":"108"},"D:\\Project\\E-Commerce\\frontend\\src\\index.js",[],["222","223"],"D:\\Project\\E-Commerce\\frontend\\src\\App.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\store.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Mui-theme.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\NotFound.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\pages\\Login.js",["224","225","226"],"D:\\Project\\E-Commerce\\frontend\\src\\pages\\register.js",["227","228","229"],"D:\\Project\\E-Commerce\\frontend\\src\\redux\\reducer\\user-reduer.js",[],["230","231"],"D:\\Project\\E-Commerce\\frontend\\src\\components\\reusable\\useForm.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\redux\\actions\\user-action.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\pages\\Register.js",["232","233","234","235"],"import { useEffect } from 'react';\r\nimport SEO from '../components/reusable/SEO';\r\n\r\nimport Avatar from '@material-ui/core/Avatar';\r\n\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport _ from '../components/controls/Controls';\r\nimport { useForm } from '../components/reusable/useForm';\r\nimport { login, register } from '../redux/actions/user-action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Snackbar, { useSnackBar } from '../components/reusable/SnackBar';\r\nimport Loader, { useLoader } from '../components/reusable/Loader';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n   },\r\n   avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n   },\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(3)\r\n   },\r\n   submit: {\r\n      margin: theme.spacing(5, 0, 2)\r\n   },\r\n   linktext: {\r\n      textDecoration: 'none'\r\n   }\r\n}));\r\nconst initialValue = [\r\n   {\r\n      type: 'text',\r\n      splitInHalf: true,\r\n      name: 'firstName',\r\n      id: 'firstName',\r\n      label: 'First Name',\r\n      placeholder: 'Jhon',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 3,\r\n      error: false,\r\n      helperText: 'First Name length must be greater than 3'\r\n   },\r\n   {\r\n      type: 'text',\r\n      splitInHalf: true,\r\n      name: 'lastName',\r\n      id: 'lastName',\r\n      label: 'Last Name',\r\n      placeholder: 'Smith',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 3,\r\n      error: false,\r\n      helperText: 'Last Name length must be greater than 3'\r\n   },\r\n   {\r\n      type: 'text',\r\n      name: 'Email',\r\n      id: 'this-email',\r\n      label: 'Email',\r\n      placeholder: 'john@gmail.com',\r\n      value: '',\r\n      validate: value => value === '' || /\\S+@\\S+\\.\\S+/.test(value),\r\n      error: false,\r\n      helperText: 'Please enter correct email'\r\n   },\r\n   {\r\n      type: 'text',\r\n      name: 'Password',\r\n      id: 'this-pass',\r\n      label: 'password',\r\n      placeholder: 'aA-zZ 1-9',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 6,\r\n      error: false,\r\n      helperText: 'Password length must be greater than 6'\r\n   }\r\n];\r\nexport default function SignUp() {\r\n   const classes = useStyles();\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n   const user = useSelector(s => s.user);\r\n   const { loading, success, error, validation_error } = user;\r\n   // validation_error: [\r\n   //    {\r\n   //       param: 'email',\r\n   //       msg: 'Must be a valid email'\r\n   //    }\r\n   // ];\r\n   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   const {\r\n      openLoader,\r\n      handleLoaderClose,\r\n      setopenLoader,\r\n      handleLoaderToggle\r\n   } = useLoader();\r\n\r\n   const { inputs, onChangeValidate, onChange, errorExist } = useForm(\r\n      initialValue\r\n   );\r\n   useEffect(() => {\r\n      if (success) {\r\n         history.push('/');\r\n      }\r\n      if (loading) setopenLoader(true);\r\n      else setopenLoader(false);\r\n\r\n      if (error) {\r\n         setopenSnackBar(true);\r\n      } else setopenSnackBar(false);\r\n   }, [loading, success, error, validation_error]);\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      const [fname, lname, email, pass] = inputs;\r\n      console.log(inputs);\r\n      if (!errorExist)\r\n         dispatch(register(fname.value, lname.value, email.value, pass.value));\r\n   };\r\n\r\n   return (\r\n      <Container component='main' maxWidth='xs'>\r\n         <SEO title='Register' />\r\n         <div className={classes.paper}>\r\n            <Avatar className={classes.avatar}>\r\n               <LockOutlinedIcon />\r\n            </Avatar>\r\n            <Typography component='h1' variant='h5'>\r\n               Sign up\r\n            </Typography>\r\n            <form className={classes.form} noValidate onSubmit={submitHandler}>\r\n               <Grid container spacing={2}>\r\n                  {inputs\r\n                     .filter(input => input.splitInHalf)\r\n                     .map(input => (\r\n                        <Grid item xs={12} sm={6}>\r\n                           <_.Input\r\n                              key={input.name}\r\n                              label={input.label}\r\n                              id={input.id}\r\n                              name={input.name}\r\n                              value={input.value}\r\n                              onChange={onChangeValidate}\r\n                              helperText={input.error && input.helperText}\r\n                              error={input.error}\r\n                              placeholder={input.placeholder}\r\n                           />{' '}\r\n                        </Grid>\r\n                     ))}\r\n               </Grid>\r\n\r\n               {inputs\r\n                  .filter(input => input.type === 'text' && !input.splitInHalf)\r\n                  .map(input => (\r\n                     <_.Input\r\n                        key={input.name}\r\n                        label={input.label}\r\n                        id={input.id}\r\n                        name={input.name}\r\n                        value={input.value}\r\n                        password={input.name === 'Password' ? 'password' : ''}\r\n                        onChange={onChangeValidate}\r\n                        helperText={input.error && input.helperText}\r\n                        error={input.error}\r\n                        placeholder={input.placeholder}\r\n                     />\r\n                  ))}\r\n               {inputs\r\n                  .filter(input => input.type === 'checkbox')\r\n                  .map(input => (\r\n                     <_.Checkbox\r\n                        label={input.label}\r\n                        onChange={onChangeValidate}\r\n                        name={input.name}\r\n                        checked={input.checked}\r\n                     />\r\n                  ))}\r\n               <_.Button\r\n                  type='submit'\r\n                  fullWidth\r\n                  variant='contained'\r\n                  className={classes.submit}\r\n                  text='Sign In'\r\n               />\r\n               <Grid container justifyContent='flex-end'>\r\n                  <Grid item>\r\n                     <Typography\r\n                        variant='p'\r\n                        component={Link}\r\n                        to='/signin'\r\n                        className={classes.linktext}>\r\n                        Already have an account? Sign in\r\n                     </Typography>\r\n                  </Grid>\r\n               </Grid>\r\n            </form>\r\n            <Snackbar\r\n               severity='error'\r\n               open={openSnackBar}\r\n               handleClose={handleSnackBarClose}\r\n               msg={user && user.error ? user.error : 'Error Connecting'}\r\n            />\r\n            <Loader open={openLoader} handleClose={handleLoaderClose} />\r\n         </div>\r\n      </Container>\r\n   );\r\n}\r\n","D:\\Project\\E-Commerce\\frontend\\src\\components\\reusable\\SnackBar.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\components\\reusable\\Loader.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\pages\\Home.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\components\\shared\\Nav.js",["236","237"],"import React from 'react';\r\nimport {\r\n   Button,\r\n   AppBar,\r\n   Toolbar,\r\n   Typography,\r\n   IconButton\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   menuButton: {\r\n      marginRight: theme.spacing(2)\r\n   }\r\n}));\r\n\r\nconst Nav = ({ handleDrawerOpen, children }) => {\r\n   const classes = useStyles();\r\n   return (\r\n      <div>\r\n         <AppBar position='static' color='default'>\r\n            <Toolbar>\r\n               <IconButton\r\n                  edge='start'\r\n                  className={classes.menuButton}\r\n                  color='inherit'\r\n                  onClick={handleDrawerOpen}>\r\n                  <MenuIcon />\r\n               </IconButton>\r\n               {children}\r\n            </Toolbar>\r\n         </AppBar>\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Nav;\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Register.js",["238"],"import { useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MUI from '../Components/Abstraction/Controls';\r\nimport { useForm } from '../Components/Reusable/useForm';\r\nimport { register } from '../Redux/actions/user-action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Snackbar, { useSnackBar } from '../Components/Reusable/SnackBar';\r\nimport Loader, { useLoader } from '../Components/Reusable/Loader';\r\nimport { PublicNav } from '../Components/Shared/PublicNav';\r\nimport Layout from '../Components/Shared/Layout';\r\nimport { DrawerDataPublic } from '../Components/Abstraction/Drawer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n   },\r\n   avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n   },\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(3)\r\n   },\r\n   submit: {\r\n      margin: theme.spacing(5, 0, 2)\r\n   },\r\n   linktext: {\r\n      textDecoration: 'none'\r\n   }\r\n}));\r\nconst initialValue = [\r\n   {\r\n      type: 'text',\r\n      splitInHalf: true,\r\n      name: 'firstName',\r\n      id: 'firstName',\r\n      label: 'First Name',\r\n      placeholder: 'Jhon',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 3,\r\n      error: false,\r\n      helperText: 'First Name length must be greater than 3'\r\n   },\r\n   {\r\n      type: 'text',\r\n      splitInHalf: true,\r\n      name: 'lastName',\r\n      id: 'lastName',\r\n      label: 'Last Name',\r\n      placeholder: 'Smith',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 3,\r\n      error: false,\r\n      helperText: 'Last Name length must be greater than 3'\r\n   },\r\n   {\r\n      type: 'text',\r\n      name: 'Email',\r\n      id: 'this-email',\r\n      label: 'Email',\r\n      placeholder: 'john@gmail.com',\r\n      value: '',\r\n      validate: value => value === '' || /\\S+@\\S+\\.\\S+/.test(value),\r\n      error: false,\r\n      helperText: 'Please enter correct email'\r\n   },\r\n   {\r\n      type: 'text',\r\n      name: 'Password',\r\n      id: 'this-pass',\r\n      label: 'password',\r\n      placeholder: 'aA-zZ 1-9',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 6,\r\n      error: false,\r\n      helperText: 'Password length must be greater than 6'\r\n   }\r\n];\r\nexport default function SignUp() {\r\n   const classes = useStyles();\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n   const user = useSelector(s => s.user);\r\n   const { loading, success, error, validation_error } = user;\r\n   // validation_error: [\r\n   //    {\r\n   //       param: 'email',\r\n   //       msg: 'Must be a valid email'\r\n   //    }\r\n   // ];\r\n   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   const { openLoader, handleLoaderClose, setopenLoader } = useLoader();\r\n\r\n   const { inputs, onChangeValidate, errorExist } = useForm(initialValue);\r\n   useEffect(() => {\r\n      if (success) {\r\n         history.push('/');\r\n      }\r\n      if (loading) setopenLoader(true);\r\n      else setopenLoader(false);\r\n\r\n      if (error) {\r\n         setopenSnackBar(true);\r\n      } else setopenSnackBar(false);\r\n   }, [loading, success, error, validation_error]);\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      const [fname, lname, email, pass] = inputs;\r\n      console.log(inputs);\r\n      if (!errorExist)\r\n         dispatch(register(fname.value, lname.value, email.value, pass.value));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Layout\r\n            title='Register'\r\n            drawerData={DrawerDataPublic}\r\n            withNav={<PublicNav />}>\r\n            <Container component='main' maxWidth='xs'>\r\n               <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                     <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component='h1' variant='h5'>\r\n                     Sign up\r\n                  </Typography>\r\n                  <form\r\n                     className={classes.form}\r\n                     noValidate\r\n                     onSubmit={submitHandler}>\r\n                     <Grid container spacing={2}>\r\n                        {inputs\r\n                           .filter(input => input.splitInHalf)\r\n                           .map(input => (\r\n                              <Grid item xs={12} sm={6}>\r\n                                 <MUI.Input\r\n                                    key={input.name}\r\n                                    label={input.label}\r\n                                    id={input.id}\r\n                                    name={input.name}\r\n                                    value={input.value}\r\n                                    onChange={onChangeValidate}\r\n                                    helperText={input.error && input.helperText}\r\n                                    error={input.error}\r\n                                    placeholder={input.placeholder}\r\n                                 />{' '}\r\n                              </Grid>\r\n                           ))}\r\n                     </Grid>\r\n\r\n                     {inputs\r\n                        .filter(\r\n                           input => input.type === 'text' && !input.splitInHalf\r\n                        )\r\n                        .map(input => (\r\n                           <MUI.Input\r\n                              key={input.name}\r\n                              label={input.label}\r\n                              id={input.id}\r\n                              name={input.name}\r\n                              value={input.value}\r\n                              password={\r\n                                 input.name === 'Password' ? 'password' : ''\r\n                              }\r\n                              onChange={onChangeValidate}\r\n                              helperText={input.error && input.helperText}\r\n                              error={input.error}\r\n                              placeholder={input.placeholder}\r\n                           />\r\n                        ))}\r\n                     {inputs\r\n                        .filter(input => input.type === 'checkbox')\r\n                        .map(input => (\r\n                           <MUI.Checkbox\r\n                              label={input.label}\r\n                              onChange={onChangeValidate}\r\n                              name={input.name}\r\n                              checked={input.checked}\r\n                           />\r\n                        ))}\r\n                     <MUI.Button\r\n                        type='submit'\r\n                        fullWidth\r\n                        variant='contained'\r\n                        className={classes.submit}\r\n                        text='Sign In'\r\n                     />\r\n                     <Grid container justifyContent='flex-end'>\r\n                        <Grid item>\r\n                           <Typography\r\n                              variant='p'\r\n                              component={Link}\r\n                              to='/signin'\r\n                              className={classes.linktext}>\r\n                              Already have an account? Sign in\r\n                           </Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                  </form>\r\n                  <Snackbar\r\n                     severity='error'\r\n                     open={openSnackBar}\r\n                     handleClose={handleSnackBarClose}\r\n                     msg={user && user.error ? user.error : 'Error Connecting'}\r\n                  />\r\n                  <Loader open={openLoader} handleClose={handleLoaderClose} />\r\n               </div>\r\n            </Container>\r\n         </Layout>\r\n      </>\r\n   );\r\n}\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Login.js",["239"],"import { useEffect } from 'react';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport { Link, useHistory } from 'react-router-dom';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport MUI from '../Components/Abstraction/Controls';\r\nimport { useForm } from '../Components/Reusable/useForm';\r\nimport { login } from '../Redux/actions/user-action';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Snackbar, { useSnackBar } from '../Components/Reusable/SnackBar';\r\nimport Loader, { useLoader } from '../Components/Reusable/Loader';\r\nimport { PublicNav } from '../Components/Shared/PublicNav';\r\nimport Layout from '../Components/Shared/Layout';\r\nimport { DrawerDataPublic } from '../Components/Abstraction/Drawer';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      display: 'flex',\r\n      flexDirection: 'column',\r\n      alignItems: 'center'\r\n   },\r\n   avatar: {\r\n      margin: theme.spacing(1),\r\n      backgroundColor: theme.palette.secondary.main\r\n   },\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(1)\r\n   },\r\n   submit: {\r\n      margin: theme.spacing(3, 0, 2)\r\n   },\r\n   linktext: {\r\n      textDecoration: 'none'\r\n   }\r\n}));\r\n\r\nconst initialValue = [\r\n   {\r\n      type: 'text',\r\n      name: 'Email',\r\n      id: 'this-email',\r\n      label: 'Email',\r\n      placeholder: 'john@gmail.com',\r\n      value: '',\r\n      validate: value => value === '' || /\\S+@\\S+\\.\\S+/.test(value),\r\n      error: false,\r\n      helperText: 'Please enter correct email'\r\n   },\r\n   {\r\n      type: 'text',\r\n      name: 'Password',\r\n      id: 'this-pass',\r\n      label: 'password',\r\n      placeholder: 'aA-zZ 1-9',\r\n      value: '',\r\n      validate: value => value === '' || value.length > 6,\r\n      error: false,\r\n      helperText: 'Password length must be greater than 6'\r\n   },\r\n\r\n   {\r\n      type: 'checkbox',\r\n      name: 'remember',\r\n      label: 'Remember Me',\r\n      checked: false\r\n   }\r\n];\r\n// let s;\r\n\r\nexport default function SignIn() {\r\n   const classes = useStyles();\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n   const user = useSelector(s => s.user);\r\n   const { loading, success, error } = user;\r\n   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   const { openLoader, handleLoaderClose, setopenLoader } = useLoader();\r\n\r\n   const { inputs, onChangeValidate, errorExist } = useForm(initialValue);\r\n   useEffect(() => {\r\n      if (success) {\r\n         history.push('/');\r\n      }\r\n      if (loading) setopenLoader(true);\r\n      else setopenLoader(false);\r\n\r\n      if (error) {\r\n         setopenSnackBar(true);\r\n      } else setopenSnackBar(false);\r\n   }, [loading, success, error]);\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      const [email, pass] = inputs;\r\n      if (!errorExist) dispatch(login(email.value, pass.value));\r\n   };\r\n\r\n   return (\r\n      <>\r\n         <Layout\r\n            title='Signin'\r\n            drawerData={DrawerDataPublic}\r\n            withNav={<PublicNav />}>\r\n            <Container component='main' maxWidth='xs'>\r\n               <div className={classes.paper}>\r\n                  <Avatar className={classes.avatar}>\r\n                     <LockOutlinedIcon />\r\n                  </Avatar>\r\n                  <Typography component='h1' variant='h5'>\r\n                     Sign in\r\n                  </Typography>\r\n                  <form\r\n                     className={classes.form}\r\n                     noValidate\r\n                     onSubmit={submitHandler}>\r\n                     {inputs\r\n                        .filter(input => input.type === 'text')\r\n                        .map(input => (\r\n                           <MUI.Input\r\n                              key={input.name}\r\n                              label={input.label}\r\n                              id={input.id}\r\n                              name={input.name}\r\n                              value={input.value}\r\n                              password={\r\n                                 input.name === 'Password' ? 'password' : ''\r\n                              }\r\n                              onChange={onChangeValidate}\r\n                              helperText={input.error && input.helperText}\r\n                              error={input.error}\r\n                              placeholder={input.placeholder}\r\n                           />\r\n                        ))}\r\n                     {inputs\r\n                        .filter(input => input.type === 'checkbox')\r\n                        .map(input => (\r\n                           <MUI.Checkbox\r\n                              label={input.label}\r\n                              onChange={onChangeValidate}\r\n                              name={input.name}\r\n                              checked={input.checked}\r\n                           />\r\n                        ))}\r\n                     <MUI.Button\r\n                        type='submit'\r\n                        fullWidth\r\n                        variant='contained'\r\n                        className={classes.submit}\r\n                        text='Sign In'\r\n                     />\r\n                     <Grid container>\r\n                        <Grid item xs>\r\n                           <Typography\r\n                              component={Link}\r\n                              to='/forgot'\r\n                              className={classes.linktext}\r\n                              variant='p'>\r\n                              Forgot Password?\r\n                           </Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                           <Typography\r\n                              component={Link}\r\n                              to='/register'\r\n                              variant='p'\r\n                              className={classes.linktext}>\r\n                              \"Don't have an account? Sign Up\"\r\n                           </Typography>\r\n                        </Grid>\r\n                     </Grid>\r\n                  </form>\r\n                  <Snackbar\r\n                     severity='error'\r\n                     open={openSnackBar}\r\n                     handleClose={handleSnackBarClose}\r\n                     msg={user && user.error ? user.error : 'Error Connecting'}\r\n                  />\r\n                  <Loader open={openLoader} handleClose={handleLoaderClose} />\r\n               </div>\r\n            </Container>\r\n         </Layout>\r\n      </>\r\n   );\r\n}\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Home.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\useForm.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\Loader.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\SnackBar.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Redux\\actions\\user-action.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\Nav.js",["240"],"import React, { useState } from 'react';\r\nimport {\r\n   AppBar,\r\n   Toolbar,\r\n   IconButton,\r\n   InputBase,\r\n   Grid\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport WithTooltip from '../Abstraction/Tooltips';\r\nconst useStyles = makeStyles(theme => ({\r\n   toolBarMArgin: {\r\n      marginBottom: '5vh'\r\n   },\r\n   menuButton: {\r\n      marginRight: theme.spacing(2)\r\n   },\r\n   title: {\r\n      marginRight: 'auto'\r\n   },\r\n   inputroot: {\r\n      background: '#e0e0e0',\r\n      borderRadius: theme.shape.borderRadius,\r\n      backgroundColor: '#eeeeee',\r\n      '&:hover': {\r\n         backgroundColor: '#e0e0e0'\r\n      },\r\n      padding: '5px 10px 5px 10px'\r\n   },\r\n   muiInput: {\r\n      padding: theme.spacing(0, 1),\r\n      // vertical padding + font size from searchIcon\r\n      transition: theme.transitions.create('width'),\r\n      width: '5rem',\r\n      [theme.breakpoints.up('sm')]: {\r\n         width: '10rem',\r\n         '&:focus': {\r\n            width: '14rem'\r\n         }\r\n      }\r\n   },\r\n   svgroot: { fill: 'gray' },\r\n   button: {\r\n      height: '10px',\r\n      '& > *': {\r\n         margin: theme.spacing(1)\r\n      }\r\n   },\r\n   icons: {\r\n      fill: '#212121',\r\n      fontSize: 'large'\r\n   }\r\n}));\r\n\r\nconst TooltipComponent = ({ inputs }) => (\r\n   <>\r\n      <Grid container>\r\n         <Grid item>\r\n            <div>{inputs}</div>\r\n         </Grid>\r\n      </Grid>\r\n   </>\r\n);\r\n\r\nconst Nav = ({ handleDrawerOpen, children }) => {\r\n   const classes = useStyles();\r\n   const [results, setResults] = useState([]);\r\n   const [query, setQuery] = useState('');\r\n   const hasResults = Boolean(query) && results.length > 0;\r\n   const onChange = ({ target: { value } }) => {\r\n      setQuery(value);\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <AppBar position='static' color='default'>\r\n            <Toolbar>\r\n               <Grid container alignItems='center'>\r\n                  <Grid item md={1} xs={1}>\r\n                     <IconButton\r\n                        edge='start'\r\n                        className={classes.menuButton}\r\n                        color='inherit'\r\n                        onClick={handleDrawerOpen}>\r\n                        <MenuIcon />\r\n                     </IconButton>\r\n                  </Grid>\r\n                  <Grid item md={6} xs={4}>\r\n                     <Grid container justify='center'>\r\n                        <Grid item>\r\n                           <WithTooltip\r\n                              open={hasResults}\r\n                              component={\r\n                                 hasResults && (\r\n                                    <TooltipComponent inputs={query} />\r\n                                 )\r\n                              }>\r\n                              <InputBase\r\n                                 classes={{\r\n                                    root: classes.inputroot,\r\n                                    input: classes.muiInput\r\n                                 }}\r\n                                 startAdornment={\r\n                                    <SearchIcon\r\n                                       classes={{\r\n                                          root: classes.svgroot\r\n                                       }}\r\n                                    />\r\n                                 }\r\n                                 placeholder='Search...'\r\n                                 value={query}\r\n                                 onChange={onChange}\r\n                              />\r\n                           </WithTooltip>\r\n                        </Grid>\r\n                     </Grid>\r\n                  </Grid>\r\n                  <Grid item md={5} xs={7}>\r\n                     {children}\r\n                  </Grid>\r\n               </Grid>\r\n               {/* <Button onClick={handleSignOut}> KHK</Button> */}\r\n            </Toolbar>\r\n         </AppBar>\r\n         <div className={classes.toolBarMArgin} />\r\n      </div>\r\n   );\r\n};\r\n\r\nexport default Nav;\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Redux\\reducer\\user-reduer.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Controls.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Grid.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\Layout.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\RadioGroup.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Select.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Input.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\ActionButton.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Checkbox.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Button.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Tooltips.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\PublicNav.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Menu.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\UserRoute.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\AdminRoute.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\SEO.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\user\\Profile.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\admin\\AdminDashBoard.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\UserNav.js",["241"],"import React, { useState, useEffect } from 'react';\r\nimport { Badge, Button, Grid } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport ShoppingCartOutlinedIcon from '@material-ui/icons/ShoppingCartOutlined';\r\nimport HomeIcon from '@material-ui/icons/Home';\r\nimport HomeOutlinedIcon from '@material-ui/icons/HomeOutlined';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport { useDispatch } from 'react-redux';\r\nimport { logout } from '../../Redux/actions/user-action';\r\nimport { Menu } from '../Abstraction/Menu';\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n   button: {\r\n      // fontSize: '1rem',\r\n      fontWeight: 'bold',\r\n      backgroundColor: '',\r\n      color: '#212121'\r\n   }\r\n}));\r\n\r\nconst userItems = [\r\n   { name: 'PROFILE', to: '/user' },\r\n   { name: 'ORDERS', to: '/user/orders' }\r\n];\r\n\r\nexport const UserNav = () => {\r\n   const { pathname } = useLocation();\r\n   const dispatch = useDispatch();\r\n   const handleSignOut = () => {\r\n      dispatch(logout());\r\n   };\r\n   const [anchorEl, setAnchorEl] = useState(null);\r\n   const [selectedIndex, setSelectedIndex] = useState(0);\r\n\r\n   const onOpen = e => {\r\n      setAnchorEl(e.currentTarget);\r\n   };\r\n   const onClose = () => {\r\n      setAnchorEl(null);\r\n   };\r\n\r\n   const handleMenuItemClick = (e, i) => {\r\n      setSelectedIndex(i);\r\n   };\r\n   const classes = useStyles();\r\n   return (\r\n      <Grid container justify='flex-end' alignItems='center' spacing={2}>\r\n         <Grid item xs={2} md={2}>\r\n            {pathname === '/' ? (\r\n               <Link to='/'>\r\n                  <HomeIcon fontSize='medium' style={{ fill: '#212121' }} />\r\n               </Link>\r\n            ) : (\r\n               <Link to='/'>\r\n                  <HomeOutlinedIcon\r\n                     fontSize='medium'\r\n                     style={{ fill: '#212121' }}\r\n                  />\r\n               </Link>\r\n            )}\r\n         </Grid>\r\n         <Grid item xs={2} md={2}>\r\n            {pathname === '/cart' ? (\r\n               <Link to='/cart'>\r\n                  <Badge badgeContent={4} color='primary'>\r\n                     <ShoppingCartIcon style={{ fill: '#212121' }} />\r\n                  </Badge>\r\n               </Link>\r\n            ) : (\r\n               <Link to='/cart'>\r\n                  <Badge badgeContent={4} color='primary'>\r\n                     <ShoppingCartOutlinedIcon style={{ fill: '#212121' }} />\r\n                  </Badge>\r\n               </Link>\r\n            )}\r\n         </Grid>\r\n         <Grid item xs={3} md={2}>\r\n            <Button\r\n               onClick={onOpen}\r\n               classes={{ root: classes.button }}\r\n               color={pathname === '/user' ? 'primary' : ''}>\r\n               User\r\n               <ArrowDropDownIcon />\r\n            </Button>\r\n         </Grid>\r\n         <Menu\r\n            items={userItems}\r\n            onClose={onClose}\r\n            anchorEl={anchorEl}\r\n            handleMenuItemClick={handleMenuItemClick}\r\n            selectedIndex={selectedIndex}\r\n         />\r\n         <Grid item xs={3} md={2}>\r\n            <Button onClick={handleSignOut} classes={{ root: classes.button }}>\r\n               LOGOUT\r\n            </Button>\r\n         </Grid>\r\n      </Grid>\r\n   );\r\n};\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Shared\\AdminNav.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Components\\Abstraction\\Drawer.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Products\\CategoryWise.js",["242","243","244"],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Products\\ManageProducts.js",["245","246","247","248","249","250"],"import React from 'react';\r\nimport { DrawerDataAdmin } from '../../Components/Abstraction/Drawer';\r\nimport { AdminNav } from '../../Components/Shared/AdminNav';\r\nimport Layout from '../../Components/Shared/Layout';\r\nimport { Button, Grid, Paper } from '@material-ui/core';\r\nimport Input from '../../Components/Abstraction/Input';\r\nimport { useForm } from '../../Components/Reusable/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Snackbar, { useSnackBar } from '../../Components/Reusable/SnackBar';\r\nimport Loader, { useLoader } from '../../Components/Reusable/Loader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginLeft: '3vw',\r\n      width: '94vw',\r\n      padding: theme.spacing(4)\r\n   },\r\n\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(1)\r\n   },\r\n   submit: {\r\n      width: '80%',\r\n      height: '100%'\r\n   }\r\n}));\r\n\r\nconst initialValue = [\r\n   {\r\n      type: 'text',\r\n      name: 'productname',\r\n      id: 'productname',\r\n      label: 'Product Name',\r\n      placeholder: 'Add Product Name...',\r\n      value: ''\r\n   },\r\n   {\r\n      type: 'text',\r\n      name: 'productdesc',\r\n      id: 'productdesc',\r\n      label: 'Product Description',\r\n      multiline: true,\r\n      placeholder: 'Add Product Description...',\r\n      value: ''\r\n   }\r\n];\r\n// let s;\r\nexport default function ManageCategories() {\r\n   const classes = useStyles();\r\n   //   const dispatch = useDispatch();\r\n   //   const history = useHistory();\r\n   //   const user = useSelector(s => s.user);\r\n   //   const { loading, success, error } = user;\r\n   //   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   //   const { openLoader, handleLoaderClose, setopenLoader } = useLoader();\r\n\r\n   const { inputs, onChange } = useForm(initialValue);\r\n   const [categories] = inputs;\r\n\r\n   //   useEffect(() => {\r\n   //      if (success) {\r\n   //         history.push('/');\r\n   //      }\r\n   //      if (loading) setopenLoader(true);\r\n   //      else setopenLoader(false);\r\n\r\n   //      if (error) {\r\n   //         setopenSnackBar(true);\r\n   //      } else setopenSnackBar(false);\r\n   //   }, [loading, success, error]);\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      console.log(categories.value);\r\n      //  if (!errorExist) dispatch(login(email.value, pass.value));\r\n   };\r\n   return (\r\n      <div>\r\n         <Layout\r\n            expandable={true}\r\n            drawerData={DrawerDataAdmin}\r\n            title='Admin'\r\n            withNav={<AdminNav />}>\r\n            <Paper className={classes.paper}>\r\n               <Grid\r\n                  container\r\n                  direction='row'\r\n                  justify='center'\r\n                  alignItems='center'\r\n                  spacing={2}>\r\n                  <Grid item md={12} xs={12}>\r\n                     <form\r\n                        className={classes.form}\r\n                        noValidate\r\n                        onSubmit={submitHandler}>\r\n                        {inputs.map(input => (\r\n                           <Input\r\n                              key={input.name}\r\n                              label={input.label}\r\n                              id={input.id}\r\n                              name={input.name}\r\n                              placeholder={input.placeholder}\r\n                              value={input.value}\r\n                              onChange={onChange}\r\n                              multiline={input.multiline}\r\n                           />\r\n                        ))}\r\n                     </form>\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                     <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={submitHandler}>\r\n                        Submit\r\n                     </Button>\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                     <Paper>{categories.value}</Paper>\r\n                  </Grid>\r\n               </Grid>\r\n            </Paper>\r\n         </Layout>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Admin\\AdminDashBoard.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\User\\Profile.js",[],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Categories\\ManageCategories.js",["251","252","253","254"],"import React, { useState, useEffect } from 'react';\r\nimport { DrawerDataAdmin } from '../../Components/Abstraction/Drawer';\r\nimport { AdminNav } from '../../Components/Shared/AdminNav';\r\nimport Layout from '../../Components/Shared/Layout';\r\nimport {\r\n   Button,\r\n   Grid,\r\n   IconButton,\r\n   InputBase,\r\n   List,\r\n   ListItem,\r\n   ListItemSecondaryAction,\r\n   ListItemText,\r\n   Paper\r\n} from '@material-ui/core';\r\nimport Input, { useInput } from '../../Components/Abstraction/Input';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport { useForm } from '../../Components/Reusable/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Snackbar, { useSnackBar } from '../../Components/Reusable/SnackBar';\r\nimport Loader, { useLoader } from '../../Components/Reusable/Loader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { useHistory, useLocation } from 'react-router-dom';\r\nimport { deleteCat, getCategories } from '../../Redux/actions/user-action';\r\nimport { createCategory } from './../../Redux/actions/user-action';\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginLeft: '3vw',\r\n      width: '94vw',\r\n      padding: theme.spacing(4)\r\n   },\r\n\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(1)\r\n   },\r\n   submit: {\r\n      width: '80%',\r\n      height: '100%'\r\n   }\r\n}));\r\n\r\nconst initialValue = { name: '', image: '' };\r\n\r\nexport default function ManageCategories() {\r\n   const classes = useStyles();\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n   const s = useSelector(s => s.category);\r\n   const { loading, error, cat } = s;\r\n   const ds = useSelector(s => s.deleteCat);\r\n   const { deleted } = ds;\r\n\r\n   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   const { openLoader, handleLoaderClose, setopenLoader } = useLoader();\r\n\r\n   const [query, setQuery] = useState('');\r\n   const onChangeQuery = ({ target: { value } }) => {\r\n      setQuery(value);\r\n   };\r\n\r\n   const { inputState, onChangeHandler } = useInput(initialValue);\r\n\r\n   useEffect(() => {\r\n      dispatch(getCategories());\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      if (loading) setopenLoader(true);\r\n      else setopenLoader(false);\r\n\r\n      if (error) {\r\n         setopenSnackBar(true);\r\n      }\r\n      if (deleted) {\r\n         setopenSnackBar(true);\r\n         setTimeout(() => {\r\n            dispatch(getCategories());\r\n         }, 1000);\r\n      }\r\n   }, [loading, error, deleted]);\r\n\r\n   const handleDelete = id => {\r\n      dispatch(deleteCat(id));\r\n   };\r\n\r\n   const handleEdit = (id, name, image) => {\r\n      history.push({\r\n         pathname: `/admin/categories/${id}`,\r\n         state: { nameInputValue: name, imageInputValue: image }\r\n      });\r\n   };\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      dispatch(createCategory(inputState.name, inputState.image));\r\n   };\r\n\r\n   return (\r\n      <div>\r\n         <Layout\r\n            expandable={true}\r\n            drawerData={DrawerDataAdmin}\r\n            title='Admin'\r\n            withNav={<AdminNav />}>\r\n            <Paper className={classes.paper}>\r\n               <Grid\r\n                  container\r\n                  direction='row'\r\n                  justify='center'\r\n                  alignItems='center'\r\n                  spacing={2}>\r\n                  <form\r\n                     className={classes.form}\r\n                     noValidate\r\n                     onSubmit={submitHandler}>\r\n                     <Grid item md={12} xs={12}>\r\n                        <Input\r\n                           label='Category Name'\r\n                           name='name'\r\n                           value={inputState.name}\r\n                           onChange={onChangeHandler}\r\n                        />\r\n                     </Grid>\r\n                     <Grid item md={12} xs={12}>\r\n                        <Input\r\n                           label='Category Image Url'\r\n                           name='image'\r\n                           value={inputState.image}\r\n                           onChange={onChangeHandler}\r\n                        />\r\n                     </Grid>\r\n                  </form>\r\n                  <Grid item md={12} xs={12}>\r\n                     <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={submitHandler}>\r\n                        Submit\r\n                     </Button>\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                     <InputBase\r\n                        id='filter'\r\n                        name='filter'\r\n                        placeholder='Filter Categories'\r\n                        value={query}\r\n                        onChange={onChangeQuery}\r\n                     />\r\n                  </Grid>\r\n                  {cat &&\r\n                     cat\r\n                        .filter(el => el.cat_name.toLowerCase().includes(query))\r\n                        .map((item, index) => (\r\n                           <Grid item md={3} xs={12}>\r\n                              <Paper>\r\n                                 <List>\r\n                                    <ListItem>\r\n                                       <ListItemText primary={item.cat_name} />\r\n                                       <ListItemSecondaryAction>\r\n                                          <IconButton\r\n                                             edge='end'\r\n                                             aria-label='delete'\r\n                                             onClick={e =>\r\n                                                handleEdit(\r\n                                                   item.cat_id,\r\n                                                   item.cat_name,\r\n                                                   item.image\r\n                                                )\r\n                                             }>\r\n                                             <EditIcon color='secondary' />\r\n                                          </IconButton>\r\n                                          <IconButton\r\n                                             edge='end'\r\n                                             aria-label='delete'\r\n                                             onClick={e =>\r\n                                                handleDelete(item.cat_id)\r\n                                             }>\r\n                                             <DeleteIcon />\r\n                                          </IconButton>\r\n                                       </ListItemSecondaryAction>\r\n                                    </ListItem>\r\n                                 </List>\r\n                              </Paper>\r\n                           </Grid>\r\n                        ))}\r\n               </Grid>\r\n            </Paper>\r\n            <Snackbar\r\n               severity='error'\r\n               open={s.error ? openSnackBar : null}\r\n               handleClose={handleSnackBarClose}\r\n               msg={s.error ? s.error : 'Error Connecting'}\r\n            />\r\n            <Snackbar\r\n               severity='success'\r\n               open={deleted ? openSnackBar : null}\r\n               handleClose={handleSnackBarClose}\r\n               msg={`Deleted`}\r\n            />\r\n            <Loader open={openLoader} handleClose={handleLoaderClose} />\r\n         </Layout>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Categories\\ManageSubCategories.js",["255","256","257","258","259","260"],"import React from 'react';\r\nimport { DrawerDataAdmin } from '../../Components/Abstraction/Drawer';\r\nimport { AdminNav } from '../../Components/Shared/AdminNav';\r\nimport Layout from '../../Components/Shared/Layout';\r\nimport { Button, Grid, Paper } from '@material-ui/core';\r\nimport Input from '../../Components/Abstraction/Input';\r\nimport { useForm } from '../../Components/Reusable/useForm';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport Snackbar, { useSnackBar } from '../../Components/Reusable/SnackBar';\r\nimport Loader, { useLoader } from '../../Components/Reusable/Loader';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginLeft: '3vw',\r\n      width: '94vw',\r\n      padding: theme.spacing(4)\r\n   },\r\n\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(1)\r\n   },\r\n   submit: {\r\n      width: '80%',\r\n      height: '100%'\r\n   }\r\n}));\r\n\r\nconst initialValue = [\r\n   {\r\n      type: 'text',\r\n      name: 'categories',\r\n      id: 'this-email',\r\n      label: 'categories',\r\n      placeholder: 'Add new Categories...',\r\n      value: ''\r\n   }\r\n];\r\n// let s;\r\nexport default function ManageCategories() {\r\n   const classes = useStyles();\r\n   //   const dispatch = useDispatch();\r\n   //   const history = useHistory();\r\n   //   const user = useSelector(s => s.user);\r\n   //   const { loading, success, error } = user;\r\n   //   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   //   const { openLoader, handleLoaderClose, setopenLoader } = useLoader();\r\n\r\n   const { inputs, onChange } = useForm(initialValue);\r\n   const [categories] = inputs;\r\n\r\n   //   useEffect(() => {\r\n   //      if (success) {\r\n   //         history.push('/');\r\n   //      }\r\n   //      if (loading) setopenLoader(true);\r\n   //      else setopenLoader(false);\r\n\r\n   //      if (error) {\r\n   //         setopenSnackBar(true);\r\n   //      } else setopenSnackBar(false);\r\n   //   }, [loading, success, error]);\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      console.log(categories.value);\r\n      //  if (!errorExist) dispatch(login(email.value, pass.value));\r\n   };\r\n   return (\r\n      <div>\r\n         <Layout\r\n            expandable={true}\r\n            drawerData={DrawerDataAdmin}\r\n            title='Admin'\r\n            withNav={<AdminNav />}>\r\n            <Paper className={classes.paper}>\r\n               <Grid\r\n                  container\r\n                  direction='row'\r\n                  justify='center'\r\n                  alignItems='center'\r\n                  spacing={2}>\r\n                  <Grid item md={12} xs={12}>\r\n                     <form\r\n                        className={classes.form}\r\n                        noValidate\r\n                        onSubmit={submitHandler}>\r\n                        {inputs.map(input => (\r\n                           <Input\r\n                              key={input.name}\r\n                              label={input.label}\r\n                              id={input.id}\r\n                              name={input.name}\r\n                              placeholder={input.placeholder}\r\n                              value={input.value}\r\n                              onChange={onChange}\r\n                           />\r\n                        ))}\r\n                     </form>\r\n                  </Grid>\r\n                  <Grid item md={12} xs={12}>\r\n                     <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={submitHandler}>\r\n                        Submit\r\n                     </Button>\r\n                  </Grid>\r\n                  <Grid item md={12}>\r\n                     <Paper>{categories.value}</Paper>\r\n                  </Grid>\r\n               </Grid>\r\n            </Paper>\r\n         </Layout>\r\n      </div>\r\n   );\r\n}\r\n","D:\\Project\\E-Commerce\\frontend\\src\\Components\\Reusable\\EditPopup.js",["261","262","263"],"D:\\Project\\E-Commerce\\frontend\\src\\Pages\\Categories\\UpdateCategory.js",["264","265","266"],"import React, { useEffect, useState } from 'react';\r\nimport { DrawerDataAdmin } from '../../Components/Abstraction/Drawer';\r\nimport { AdminNav } from '../../Components/Shared/AdminNav';\r\nimport Layout from '../../Components/Shared/Layout';\r\nimport { useLocation, useParams, useHistory } from 'react-router-dom';\r\n\r\nimport { Button, Grid, Paper } from '@material-ui/core';\r\nimport Input, { useInput } from '../../Components/Abstraction/Input';\r\nimport Snackbar, { useSnackBar } from '../../Components/Reusable/SnackBar';\r\nimport Loader, { useLoader } from '../../Components/Reusable/Loader';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport { updateCat } from '../../Redux/actions/user-action';\r\nconst useStyles = makeStyles(theme => ({\r\n   paper: {\r\n      marginTop: theme.spacing(8),\r\n      marginLeft: '3vw',\r\n      width: '94vw',\r\n      padding: theme.spacing(4)\r\n   },\r\n\r\n   form: {\r\n      width: '100%', // Fix IE11 issue.\r\n      marginTop: theme.spacing(1)\r\n   },\r\n   submit: {\r\n      width: '80%',\r\n      height: '100%'\r\n   }\r\n}));\r\nconst initialValue = { name: '', image: '' };\r\n\r\nexport default function UpdateCategory() {\r\n   const classes = useStyles();\r\n   const dispatch = useDispatch();\r\n   const history = useHistory();\r\n   const {\r\n      state: { nameInputValue, imageInputValue }\r\n   } = useLocation();\r\n   const { id } = useParams();\r\n   const us = useSelector(s => s.updateCat);\r\n   const { updated, loading, updateError } = us;\r\n\r\n   const { openSnackBar, handleSnackBarClose, setopenSnackBar } = useSnackBar();\r\n   const { openLoader, handleLoaderClose, setopenLoader } = useLoader();\r\n\r\n   const { inputState, setInputState, onChangeHandler } = useInput(\r\n      initialValue\r\n   );\r\n   useEffect(() => {\r\n      setInputState({\r\n         ...inputState,\r\n         name: nameInputValue,\r\n         image: imageInputValue\r\n      });\r\n   }, []);\r\n\r\n   useEffect(() => {\r\n      if (loading) setopenLoader(true);\r\n      else setopenLoader(false);\r\n\r\n      if (updateError) {\r\n         console.log(updateError);\r\n         setopenSnackBar(true);\r\n      }\r\n      if (updated) {\r\n         setopenSnackBar(true);\r\n         setTimeout(() => {\r\n            history.push(`/admin/categories`);\r\n         }, 1000);\r\n      }\r\n   }, [updated, updateError, loading]);\r\n\r\n   const submitHandler = async e => {\r\n      e.preventDefault();\r\n      dispatch(updateCat(id, inputState.name, inputState.image));\r\n   };\r\n   return (\r\n      <div>\r\n         <Layout\r\n            expandable={true}\r\n            drawerData={DrawerDataAdmin}\r\n            title='Admin'\r\n            withNav={<AdminNav />}>\r\n            <Paper className={classes.paper}>\r\n               <Grid\r\n                  container\r\n                  direction='row'\r\n                  justify='flex-end'\r\n                  alignItems='center'\r\n                  spacing={2}>\r\n                  <form\r\n                     className={classes.form}\r\n                     noValidate\r\n                     onSubmit={submitHandler}>\r\n                     <Grid item md={12} xs={12}>\r\n                        <Input\r\n                           label='Category Name'\r\n                           name='name'\r\n                           value={inputState.name}\r\n                           onChange={onChangeHandler}\r\n                        />\r\n                     </Grid>\r\n                     <Grid item md={12} xs={12}>\r\n                        <Input\r\n                           label='Category Image Url'\r\n                           name='image'\r\n                           value={inputState.image}\r\n                           onChange={onChangeHandler}\r\n                        />\r\n                     </Grid>\r\n                  </form>\r\n                  <Grid item md={1} xs={3}>\r\n                     <Button\r\n                        type='submit'\r\n                        variant='contained'\r\n                        color='primary'\r\n                        onClick={submitHandler}>\r\n                        Update\r\n                     </Button>\r\n                  </Grid>\r\n               </Grid>\r\n            </Paper>\r\n            <Snackbar\r\n               severity='error'\r\n               open={updateError ? openSnackBar : null}\r\n               handleClose={handleSnackBarClose}\r\n               msg={updateError ? updateError : 'Error Updating'}\r\n            />\r\n            <Snackbar\r\n               severity='success'\r\n               open={updated ? openSnackBar : null}\r\n               handleClose={handleSnackBarClose}\r\n               msg={`${nameInputValue} Updated`}\r\n            />\r\n            <Loader open={openLoader} handleClose={handleLoaderClose} />\r\n         </Layout>\r\n      </div>\r\n   );\r\n}\r\n",{"ruleId":"267","replacedBy":"268"},{"ruleId":"269","replacedBy":"270"},{"ruleId":"271","severity":1,"message":"272","line":84,"column":7,"nodeType":"273","messageId":"274","endLine":84,"endColumn":25},{"ruleId":"271","severity":1,"message":"275","line":87,"column":38,"nodeType":"273","messageId":"274","endLine":87,"endColumn":46},{"ruleId":"276","severity":1,"message":"277","line":100,"column":7,"nodeType":"278","endLine":100,"endColumn":32,"suggestions":"279"},{"ruleId":"271","severity":1,"message":"280","line":1,"column":10,"nodeType":"273","messageId":"274","endLine":1,"endColumn":18},{"ruleId":"271","severity":1,"message":"281","line":3,"column":8,"nodeType":"273","messageId":"274","endLine":3,"endColumn":14},{"ruleId":"271","severity":1,"message":"282","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"267","replacedBy":"283"},{"ruleId":"269","replacedBy":"284"},{"ruleId":"271","severity":1,"message":"285","line":14,"column":10,"nodeType":"273","messageId":"274","endLine":14,"endColumn":15},{"ruleId":"271","severity":1,"message":"272","line":106,"column":7,"nodeType":"273","messageId":"274","endLine":106,"endColumn":25},{"ruleId":"271","severity":1,"message":"275","line":109,"column":38,"nodeType":"273","messageId":"274","endLine":109,"endColumn":46},{"ruleId":"276","severity":1,"message":"277","line":122,"column":7,"nodeType":"278","endLine":122,"endColumn":50,"suggestions":"286"},{"ruleId":"271","severity":1,"message":"281","line":3,"column":4,"nodeType":"273","messageId":"274","endLine":3,"endColumn":10},{"ruleId":"271","severity":1,"message":"287","line":6,"column":4,"nodeType":"273","messageId":"274","endLine":6,"endColumn":14},{"ruleId":"276","severity":1,"message":"277","line":115,"column":7,"nodeType":"278","endLine":115,"endColumn":50,"suggestions":"288"},{"ruleId":"276","severity":1,"message":"277","line":95,"column":7,"nodeType":"278","endLine":95,"endColumn":32,"suggestions":"289"},{"ruleId":"271","severity":1,"message":"290","line":69,"column":20,"nodeType":"273","messageId":"274","endLine":69,"endColumn":30},{"ruleId":"271","severity":1,"message":"291","line":1,"column":27,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"271","severity":1,"message":"292","line":42,"column":7,"nodeType":"273","messageId":"274","endLine":42,"endColumn":12},{"ruleId":"276","severity":1,"message":"293","line":72,"column":7,"nodeType":"278","endLine":72,"endColumn":9,"suggestions":"294"},{"ruleId":"271","severity":1,"message":"295","line":74,"column":10,"nodeType":"273","messageId":"274","endLine":74,"endColumn":17},{"ruleId":"271","severity":1,"message":"296","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":21},{"ruleId":"271","severity":1,"message":"297","line":8,"column":23,"nodeType":"273","messageId":"274","endLine":8,"endColumn":34},{"ruleId":"271","severity":1,"message":"298","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"299","line":10,"column":20,"nodeType":"273","messageId":"274","endLine":10,"endColumn":31},{"ruleId":"271","severity":1,"message":"300","line":11,"column":8,"nodeType":"273","messageId":"274","endLine":11,"endColumn":14},{"ruleId":"271","severity":1,"message":"301","line":11,"column":18,"nodeType":"273","messageId":"274","endLine":11,"endColumn":27},{"ruleId":"271","severity":1,"message":"302","line":19,"column":10,"nodeType":"273","messageId":"274","endLine":19,"endColumn":17},{"ruleId":"271","severity":1,"message":"303","line":25,"column":22,"nodeType":"273","messageId":"274","endLine":25,"endColumn":33},{"ruleId":"276","severity":1,"message":"304","line":69,"column":7,"nodeType":"278","endLine":69,"endColumn":9,"suggestions":"305"},{"ruleId":"276","severity":1,"message":"306","line":84,"column":7,"nodeType":"278","endLine":84,"endColumn":32,"suggestions":"307"},{"ruleId":"271","severity":1,"message":"296","line":8,"column":10,"nodeType":"273","messageId":"274","endLine":8,"endColumn":21},{"ruleId":"271","severity":1,"message":"297","line":8,"column":23,"nodeType":"273","messageId":"274","endLine":8,"endColumn":34},{"ruleId":"271","severity":1,"message":"298","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"299","line":10,"column":20,"nodeType":"273","messageId":"274","endLine":10,"endColumn":31},{"ruleId":"271","severity":1,"message":"300","line":11,"column":8,"nodeType":"273","messageId":"274","endLine":11,"endColumn":14},{"ruleId":"271","severity":1,"message":"301","line":11,"column":18,"nodeType":"273","messageId":"274","endLine":11,"endColumn":27},{"ruleId":"271","severity":1,"message":"282","line":4,"column":8,"nodeType":"273","messageId":"274","endLine":4,"endColumn":17},{"ruleId":"271","severity":1,"message":"308","line":8,"column":8,"nodeType":"273","messageId":"274","endLine":8,"endColumn":25},{"ruleId":"271","severity":1,"message":"298","line":10,"column":8,"nodeType":"273","messageId":"274","endLine":10,"endColumn":16},{"ruleId":"271","severity":1,"message":"280","line":1,"column":28,"nodeType":"273","messageId":"274","endLine":1,"endColumn":36},{"ruleId":"276","severity":1,"message":"309","line":57,"column":7,"nodeType":"278","endLine":57,"endColumn":9,"suggestions":"310"},{"ruleId":"276","severity":1,"message":"277","line":73,"column":7,"nodeType":"278","endLine":73,"endColumn":38,"suggestions":"311"},"no-native-reassign",["312"],"no-negated-in-lhs",["313"],"no-unused-vars","'handleLoaderToggle' is assigned a value but never used.","Identifier","unusedVar","'onChange' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'setopenLoader', and 'setopenSnackBar'. Either include them or remove the dependency array.","ArrayExpression",["314"],"'useState' is defined but never used.","'Button' is defined but never used.","'TextField' is defined but never used.",["312"],["313"],"'login' is defined but never used.",["315"],"'Typography' is defined but never used.",["316"],["317"],"'setResults' is assigned a value but never used.","'useEffect' is defined but never used.","'datas' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'cat' and 'dispatch'. Either include them or remove the dependency array.",["318"],"'onclick' is assigned a value but never used.","'useDispatch' is defined but never used.","'useSelector' is defined but never used.","'Snackbar' is defined but never used.","'useSnackBar' is defined but never used.","'Loader' is defined but never used.","'useLoader' is defined but never used.","'useForm' is defined but never used.","'useLocation' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["319"],"React Hook useEffect has missing dependencies: 'dispatch', 'setopenLoader', and 'setopenSnackBar'. Either include them or remove the dependency array.",["320"],"'DialogContentText' is defined but never used.","React Hook useEffect has missing dependencies: 'imageInputValue', 'inputState', 'nameInputValue', and 'setInputState'. Either include them or remove the dependency array.",["321"],["322"],"no-global-assign","no-unsafe-negation",{"desc":"323","fix":"324"},{"desc":"325","fix":"326"},{"desc":"325","fix":"327"},{"desc":"323","fix":"328"},{"desc":"329","fix":"330"},{"desc":"331","fix":"332"},{"desc":"333","fix":"334"},{"desc":"335","fix":"336"},{"desc":"337","fix":"338"},"Update the dependencies array to be: [loading, success, error, setopenLoader, setopenSnackBar, history]",{"range":"339","text":"340"},"Update the dependencies array to be: [loading, success, error, validation_error, setopenLoader, setopenSnackBar, history]",{"range":"341","text":"342"},{"range":"343","text":"342"},{"range":"344","text":"340"},"Update the dependencies array to be: [cat, dispatch]",{"range":"345","text":"346"},"Update the dependencies array to be: [dispatch]",{"range":"347","text":"348"},"Update the dependencies array to be: [loading, error, deleted, setopenLoader, setopenSnackBar, dispatch]",{"range":"349","text":"350"},"Update the dependencies array to be: [imageInputValue, inputState, nameInputValue, setInputState]",{"range":"351","text":"352"},"Update the dependencies array to be: [updated, updateError, loading, setopenLoader, setopenSnackBar, history]",{"range":"353","text":"354"},[2882,2907],"[loading, success, error, setopenLoader, setopenSnackBar, history]",[3561,3604],"[loading, success, error, validation_error, setopenLoader, setopenSnackBar, history]",[3612,3655],[2942,2967],[2279,2281],"[cat, dispatch]",[2245,2247],"[dispatch]",[2573,2598],"[loading, error, deleted, setopenLoader, setopenSnackBar, dispatch]",[1931,1933],"[imageInputValue, inputState, nameInputValue, setInputState]",[2309,2340],"[updated, updateError, loading, setopenLoader, setopenSnackBar, history]"]